version: '3.3'

services:

  mongo:
    image: mongo
    restart: always
    container_name: mongo
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./mongo-data:/data/db

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root

  pizza-store:
    build:
      context: pizza-store
      dockerfile: Dockerfile
    container_name:  pizza_store
    depends_on:
      - mongo
    ports:
      - "9100:9100"
    restart: always
    environment:
      MONGO_CONNECTION_STRING: mongodb://root:root@mongo:27017/?authMechanism=DEFAULT&authSource=admin
      BACKEND_PORT: 9100
      APP_NAME: Pizza Store
      NODE_ENV: dev
      MONGO_PASSWORD: root
      MONGO_USER: root
      BCRYPT_SALT: 10
      JWT_ALGORITHM: RS256
      FLEET_SERVICE: http://fleet:8080/dronora
    env_file:
      - pizza-store.env

  fleet:
    build:
      context: fleet-service
      dockerfile: Dockerfile
    container_name:  fleet_service
    hostname: fleet
    depends_on:
      - mongo
    ports:
      - "8080:8080"
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      MONGODB_HOST: mongo
      MONGODB_PORT: 27017
      RABBITMQ_USERNAME: root
      RABBITMQ_PASSWORD: root
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: root
      MONGODB_DATABASE: dronora

  drone-1:
    image: drone
    build:
      context: drone
      dockerfile: Dockerfile
    container_name:  drone_1
    hostname: drone-1
    depends_on:
      - fleet
      - rabbitmq
    ports:
      - "8081:8081"
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      FLEET_HOST: fleet
      FLEET_PORT: 8080
      RABBITMQ_USERNAME: root
      RABBITMQ_PASSWORD: root

  drone-2:
    image: drone
    container_name: drone_2
    hostname: drone-2
    depends_on:
      - fleet
      - rabbitmq
      - drone-1
    ports:
      - "8082:8081"
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      FLEET_HOST: fleet
      FLEET_PORT: 8080
      RABBITMQ_USERNAME: root
      RABBITMQ_PASSWORD: root

  pizzeria-web-client:
    build:
      context: pizzeria-web-client
      dockerfile: Dockerfile
    container_name: pizzeria-web-client
    depends_on:
      - pizza-store
      - fleet
    environment:
      REACT_APP_BACKEND_URL: http://pizza-store:9100/api
    ports:
      - "3000:3000"

  operating-web-client:
    build:
      context: operating-web-client
      dockerfile: Dockerfile
    container_name: operating-web-client
    depends_on:
      - fleet
    ports:
      - "3001:3000"
    environment:
      REACT_APP_FLEET_SERVICE: http://fleet:8080/dronora

volumes:
  mongo-data:
